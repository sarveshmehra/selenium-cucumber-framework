{
  "swagger":"2.0",
  "info":{
    "description":"Api to handle TOTP devices",
    "version":"0.1.49",
    "title":"TOTP Orchestration",
    "termsOfService":"https://www.bisnode.com",
    "contact":{
      "name":"Bisnode",
      "url":"https://www.bisnode.com",
      "email":"bisnodesverige.se@bisnode.com"
    },
    "license":{
      "name":"Proprietary",
      "url":"https://www.bisnode.com"
    }
  },
  "host":"sfs.qa.aws.blue.bisnode.net",
  "basePath":"/ims-totp-o/v1",
  "tags":[
    {
      "name":"cleanup-device-user-connection-controller",
      "description":"Cleanup Device User Connection Controller"
    },
    {
      "name":"device-customer-connection-controller",
      "description":"Device Customer Connection Controller"
    },
    {
      "name":"device-state-transition-controller",
      "description":"Device State Transition Controller"
    },
    {
      "name":"device-user-connection-controller",
      "description":"Device User Connection Controller"
    },
    {
      "name":"key-controller",
      "description":"Key Controller"
    },
    {
      "name":"passthru-customer-controller",
      "description":"Passthru Customer Controller"
    },
    {
      "name":"passthru-device-controller",
      "description":"Passthru Device Controller"
    },
    {
      "name":"passthru-file-import-controller",
      "description":"Passthru File Import Controller"
    },
    {
      "name":"passthru-import-jobs-controller",
      "description":"Passthru Import Jobs Controller"
    }
  ],
  "schemes":[
    "https"
  ],
  "paths":{
    "/customers":{
      "get":{
        "tags":[
          "passthru-customer-controller"
        ],
        "summary":"getCustomers",
        "operationId":"getCustomersUsingGET",
        "produces":[
          "application/json;charset=UTF-8"
        ],
        "parameters":[
          {
            "name":"contractId",
            "in":"query",
            "description":"Find by contractId",
            "required":false,
            "type":"string",
            "allowEmptyValue":false
          },
          {
            "name":"contractIdType",
            "in":"query",
            "description":"Find by contractIdType",
            "required":false,
            "type":"string",
            "allowEmptyValue":false
          },
          {
            "name":"match",
            "in":"query",
            "description":"Search matching",
            "required":false,
            "type":"string",
            "default":"EXACT",
            "allowEmptyValue":false
          },
          {
            "name":"page",
            "in":"query",
            "description":"Requested page number (zero indexed)",
            "required":false,
            "type":"integer",
            "default":0,
            "format":"int32",
            "allowEmptyValue":false
          },
          {
            "name":"size",
            "in":"query",
            "description":"Requested page size",
            "required":false,
            "type":"integer",
            "default":10,
            "format":"int32",
            "allowEmptyValue":false
          },
          {
            "name":"sortOrder",
            "in":"query",
            "description":"Sort order",
            "required":false,
            "type":"string",
            "default":"DESC",
            "allowEmptyValue":false,
            "enum":[
              "ASC",
              "DESC"
            ]
          },
          {
            "name":"sortBy",
            "in":"query",
            "description":"Sort result by",
            "required":false,
            "type":"string",
            "default":"UPDATED_AT",
            "allowEmptyValue":false,
            "enum":[
              "UPDATED_AT",
              "CREATED_AT",
              "STATE"
            ]
          },
          {
            "name":"Authorization",
            "in":"header",
            "description":"Authorization token",
            "required":false,
            "type":"string"
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "$ref":"#/definitions/ResponseMessage«GetCustomersResponseData»"
            }
          },
          "400":{
            "description":"Bad request"
          },
          "404":{
            "description":"Not found"
          },
          "500":{
            "description":"Internal Server Error"
          }
        },
        "security":[
          {
            "oauth2":[
              "totp"
            ]
          }
        ],
        "deprecated":false
      },
      "post":{
        "tags":[
          "passthru-customer-controller"
        ],
        "summary":"postCustomer",
        "operationId":"postCustomerUsingPOST",
        "consumes":[
          "application/json"
        ],
        "produces":[
          "*/*"
        ],
        "parameters":[
          {
            "in":"body",
            "name":"createCustomer",
            "description":"createCustomer",
            "required":true,
            "schema":{
              "$ref":"#/definitions/CustomerCreate"
            }
          },
          {
            "name":"Authorization",
            "in":"header",
            "description":"Authorization token",
            "required":false,
            "type":"string"
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "$ref":"#/definitions/ResponseMessage«Customer»"
            }
          },
          "400":{
            "description":"Bad request"
          },
          "404":{
            "description":"Not found"
          },
          "500":{
            "description":"Internal Server Error"
          }
        },
        "security":[
          {
            "oauth2":[
              "totp"
            ]
          }
        ],
        "deprecated":false
      }
    },
    "/customers/{customerId}":{
      "get":{
        "tags":[
          "passthru-customer-controller"
        ],
        "summary":"getCustomer",
        "operationId":"getCustomerUsingGET",
        "produces":[
          "application/json;charset=UTF-8"
        ],
        "parameters":[
          {
            "name":"customerId",
            "in":"path",
            "description":"customerId",
            "required":true,
            "type":"string"
          },
          {
            "name":"Authorization",
            "in":"header",
            "description":"Authorization token",
            "required":false,
            "type":"string"
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "$ref":"#/definitions/ResponseMessage«Customer»"
            }
          },
          "400":{
            "description":"Bad request"
          },
          "404":{
            "description":"Not found"
          },
          "500":{
            "description":"Internal Server Error"
          }
        },
        "security":[
          {
            "oauth2":[
              "totp"
            ]
          }
        ],
        "deprecated":false
      },
      "put":{
        "tags":[
          "passthru-customer-controller"
        ],
        "summary":"putCustomers",
        "operationId":"putCustomersUsingPUT",
        "consumes":[
          "application/json"
        ],
        "produces":[
          "*/*"
        ],
        "parameters":[
          {
            "in":"body",
            "name":"customerUpdate",
            "description":"customerUpdate",
            "required":true,
            "schema":{
              "$ref":"#/definitions/CustomerUpdate"
            }
          },
          {
            "name":"customerId",
            "in":"path",
            "description":"customerId",
            "required":true,
            "type":"string"
          },
          {
            "name":"Authorization",
            "in":"header",
            "description":"Authorization token",
            "required":false,
            "type":"string"
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "$ref":"#/definitions/ResponseMessage«Customer»"
            }
          },
          "400":{
            "description":"Bad request"
          },
          "404":{
            "description":"Not found"
          },
          "500":{
            "description":"Internal Server Error"
          }
        },
        "security":[
          {
            "oauth2":[
              "totp"
            ]
          }
        ],
        "deprecated":false
      },
      "delete":{
        "tags":[
          "passthru-customer-controller"
        ],
        "summary":"deleteCustomer",
        "operationId":"deleteCustomerUsingDELETE",
        "produces":[
          "*/*"
        ],
        "parameters":[
          {
            "name":"customerId",
            "in":"path",
            "description":"customerId",
            "required":true,
            "type":"string"
          },
          {
            "name":"Authorization",
            "in":"header",
            "description":"Authorization token",
            "required":false,
            "type":"string"
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "$ref":"#/definitions/ResponseMessage«Customer»"
            }
          },
          "400":{
            "description":"Bad request"
          },
          "404":{
            "description":"Not found"
          },
          "500":{
            "description":"Internal Server Error"
          }
        },
        "security":[
          {
            "oauth2":[
              "totp"
            ]
          }
        ],
        "deprecated":false
      }
    },
    "/devices":{
      "get":{
        "tags":[
          "passthru-device-controller"
        ],
        "summary":"getDevices",
        "operationId":"getDevicesUsingGET",
        "produces":[
          "application/json;charset=UTF-8"
        ],
        "parameters":[
          {
            "name":"serialNumber",
            "in":"query",
            "description":"serialNumber",
            "required":false,
            "type":"string"
          },
          {
            "name":"manufacturer",
            "in":"query",
            "description":"manufacturer",
            "required":false,
            "type":"string"
          },
          {
            "name":"model",
            "in":"query",
            "description":"model",
            "required":false,
            "type":"string"
          },
          {
            "name":"contractId",
            "in":"query",
            "description":"contractId",
            "required":false,
            "type":"string"
          },
          {
            "name":"contractIdType",
            "in":"query",
            "description":"contractIdType",
            "required":false,
            "type":"string"
          },
          {
            "name":"state",
            "in":"query",
            "description":"state",
            "required":false,
            "type":"string",
            "enum":[
              "VACANT",
              "ACTIVE",
              "DISABLED",
              "LOST",
              "DISCONTINUED"
            ]
          },
          {
            "name":"match",
            "in":"query",
            "description":"match",
            "required":false,
            "type":"string",
            "default":"EXACT",
            "enum":[
              "EXACT",
              "CONTAINS",
              "STARTSWITH"
            ]
          },
          {
            "name":"page",
            "in":"query",
            "description":"page",
            "required":false,
            "type":"integer",
            "default":0,
            "format":"int32"
          },
          {
            "name":"size",
            "in":"query",
            "description":"size",
            "required":false,
            "type":"integer",
            "default":10,
            "format":"int32"
          },
          {
            "name":"sortBy",
            "in":"query",
            "description":"sortBy",
            "required":false,
            "type":"string",
            "default":"UPDATED_AT",
            "enum":[
              "UPDATED_AT",
              "CREATED_AT",
              "STATE"
            ]
          },
          {
            "name":"sortOrder",
            "in":"query",
            "description":"sortOrder",
            "required":false,
            "type":"string",
            "default":"DESC",
            "enum":[
              "ASC",
              "DESC"
            ]
          },
          {
            "name":"Authorization",
            "in":"header",
            "description":"Authorization token",
            "required":false,
            "type":"string"
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "$ref":"#/definitions/ResponseMessage«GetDevicesResponseData»"
            }
          },
          "400":{
            "description":"Bad request"
          },
          "500":{
            "description":"Internal Server Error"
          }
        },
        "security":[
          {
            "oauth2":[
              "totp"
            ]
          }
        ],
        "deprecated":false
      }
    },
    "/devices/assertdevicemissingusers":{
      "put":{
        "tags":[
          "cleanup-device-user-connection-controller"
        ],
        "summary":"reconsileDevicesAndUsers",
        "operationId":"reconsileDevicesAndUsersUsingPUT",
        "consumes":[
          "application/json;charset=UTF-8"
        ],
        "produces":[
          "application/json;charset=UTF-8"
        ],
        "parameters":[
          {
            "name":"Authorization",
            "in":"header",
            "description":"Authorization token",
            "required":false,
            "type":"string"
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "$ref":"#/definitions/ResponseEntity"
            }
          },
          "400":{
            "description":"Not found: Feature toggle is off"
          },
          "500":{
            "description":"Internal Server Error"
          }
        },
        "security":[
          {
            "oauth2":[
              "totp"
            ]
          }
        ],
        "deprecated":false
      }
    },
    "/devices/listnonvacantdeviceswithoutusers":{
      "get":{
        "tags":[
          "cleanup-device-user-connection-controller"
        ],
        "summary":"getNonVacantDevicesWithoutUsers",
        "operationId":"getNonVacantDevicesWithoutUsersUsingGET",
        "produces":[
          "*/*"
        ],
        "parameters":[
          {
            "name":"Authorization",
            "in":"header",
            "description":"Authorization token",
            "required":false,
            "type":"string"
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "$ref":"#/definitions/ResponseMessage«DevicesResponse»"
            }
          }
        },
        "security":[
          {
            "oauth2":[
              "totp"
            ]
          }
        ],
        "deprecated":false
      }
    },
    "/devices/states/{deviceId}/{state}":{
      "put":{
        "tags":[
          "device-state-transition-controller"
        ],
        "summary":"Set the state of the given device",
        "operationId":"setDeviceStateUsingPUT",
        "consumes":[
          "application/json"
        ],
        "produces":[
          "application/json;charset=UTF-8"
        ],
        "parameters":[
          {
            "name":"deviceId",
            "in":"path",
            "description":"deviceId",
            "required":true,
            "type":"string"
          },
          {
            "name":"state",
            "in":"path",
            "description":"state",
            "required":true,
            "type":"string"
          },
          {
            "name":"disconnectUser",
            "in":"query",
            "description":"disconnectUser",
            "required":false,
            "type":"boolean",
            "default":false
          },
          {
            "name":"Authorization",
            "in":"header",
            "description":"Authorization token",
            "required":false,
            "type":"string"
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "$ref":"#/definitions/ResponseMessage«Device»"
            }
          }
        },
        "security":[
          {
            "oauth2":[
              "totp"
            ]
          }
        ],
        "deprecated":false
      }
    },
    "/devices/states/{id}":{
      "get":{
        "tags":[
          "device-state-transition-controller"
        ],
        "summary":"Fetches the allowed target state transitions for a device in its current state and conditions",
        "operationId":"getAllowedDeviceTransistionsUsingGET",
        "produces":[
          "application/json;charset=UTF-8"
        ],
        "parameters":[
          {
            "name":"id",
            "in":"path",
            "description":"id",
            "required":true,
            "type":"string"
          },
          {
            "name":"Authorization",
            "in":"header",
            "description":"Authorization token",
            "required":false,
            "type":"string"
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "$ref":"#/definitions/ResponseMessage«DeviceStateInfo»"
            }
          }
        },
        "security":[
          {
            "oauth2":[
              "totp"
            ]
          }
        ],
        "deprecated":false
      }
    },
    "/devices/{deviceId}":{
      "get":{
        "tags":[
          "passthru-device-controller"
        ],
        "summary":"getDevice",
        "operationId":"getDeviceUsingGET",
        "produces":[
          "application/json;charset=UTF-8"
        ],
        "parameters":[
          {
            "name":"deviceId",
            "in":"path",
            "description":"deviceId",
            "required":true,
            "type":"string"
          },
          {
            "name":"Authorization",
            "in":"header",
            "description":"Authorization token",
            "required":false,
            "type":"string"
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "$ref":"#/definitions/ResponseMessage«Device»"
            }
          },
          "400":{
            "description":"Bad Request"
          },
          "404":{
            "description":"Not Found"
          },
          "500":{
            "description":"Internal Server Error"
          }
        },
        "security":[
          {
            "oauth2":[
              "totp"
            ]
          }
        ],
        "deprecated":false
      },
      "put":{
        "tags":[
          "passthru-device-controller"
        ],
        "summary":"updateDevice",
        "operationId":"updateDeviceUsingPUT",
        "consumes":[
          "application/json;charset=UTF-8"
        ],
        "produces":[
          "application/json;charset=UTF-8"
        ],
        "parameters":[
          {
            "name":"deviceId",
            "in":"path",
            "description":"deviceId",
            "required":true,
            "type":"string"
          },
          {
            "in":"body",
            "name":"deviceUpdate",
            "description":"deviceUpdate",
            "required":true,
            "schema":{
              "$ref":"#/definitions/DeviceUpdate"
            }
          },
          {
            "name":"Authorization",
            "in":"header",
            "description":"Authorization token",
            "required":false,
            "type":"string"
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "$ref":"#/definitions/ResponseMessage«Device»"
            }
          },
          "400":{
            "description":"Bad request"
          },
          "404":{
            "description":"Not found"
          },
          "500":{
            "description":"Internal Server Error"
          }
        },
        "security":[
          {
            "oauth2":[
              "totp"
            ]
          }
        ],
        "deprecated":false
      }
    },
    "/devices/{deviceId}/customer/{customerId}":{
      "put":{
        "tags":[
          "device-customer-connection-controller"
        ],
        "summary":"connectDeviceAndCustomer",
        "operationId":"connectDeviceAndCustomerUsingPUT",
        "consumes":[
          "application/json;charset=UTF-8"
        ],
        "produces":[
          "application/json;charset=UTF-8"
        ],
        "parameters":[
          {
            "name":"deviceId",
            "in":"path",
            "description":"deviceId",
            "required":true,
            "type":"string"
          },
          {
            "name":"customerId",
            "in":"path",
            "description":"customerId",
            "required":true,
            "type":"string"
          },
          {
            "name":"Authorization",
            "in":"header",
            "description":"Authorization token",
            "required":false,
            "type":"string"
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "$ref":"#/definitions/ResponseMessage«Device»"
            }
          },
          "400":{
            "description":"Bad request"
          },
          "404":{
            "description":"Not found"
          },
          "409":{
            "description":"Conflict"
          },
          "412":{
            "description":"Precondition Failed"
          },
          "500":{
            "description":"Internal Server Error"
          }
        },
        "security":[
          {
            "oauth2":[
              "totp"
            ]
          }
        ],
        "deprecated":false
      },
      "delete":{
        "tags":[
          "device-customer-connection-controller"
        ],
        "summary":"disconnectDeviceAndCustomer",
        "operationId":"disconnectDeviceAndCustomerUsingDELETE",
        "consumes":[
          "application/json;charset=UTF-8"
        ],
        "produces":[
          "application/json;charset=UTF-8"
        ],
        "parameters":[
          {
            "name":"deviceId",
            "in":"path",
            "description":"deviceId",
            "required":true,
            "type":"string"
          },
          {
            "name":"customerId",
            "in":"path",
            "description":"customerId",
            "required":true,
            "type":"string"
          },
          {
            "name":"Authorization",
            "in":"header",
            "description":"Authorization token",
            "required":false,
            "type":"string"
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "$ref":"#/definitions/ResponseMessage«Device»"
            }
          },
          "400":{
            "description":"Bad request"
          },
          "404":{
            "description":"Not found"
          },
          "409":{
            "description":"Conflict"
          },
          "412":{
            "description":"Precondition Failed"
          },
          "500":{
            "description":"Internal Server Error"
          }
        },
        "security":[
          {
            "oauth2":[
              "totp"
            ]
          }
        ],
        "deprecated":false
      }
    },
    "/devices/{deviceId}/user/{userId}":{
      "put":{
        "tags":[
          "device-user-connection-controller"
        ],
        "summary":"connectDeviceAndUser",
        "operationId":"connectDeviceAndUserUsingPUT",
        "consumes":[
          "application/json;charset=UTF-8"
        ],
        "produces":[
          "application/json;charset=UTF-8"
        ],
        "parameters":[
          {
            "name":"deviceId",
            "in":"path",
            "description":"deviceId",
            "required":true,
            "type":"string"
          },
          {
            "name":"userId",
            "in":"path",
            "description":"userId",
            "required":true,
            "type":"string"
          },
          {
            "name":"loa",
            "in":"query",
            "description":"loa",
            "required":false,
            "type":"string"
          },
          {
            "name":"Authorization",
            "in":"header",
            "description":"Authorization token",
            "required":false,
            "type":"string"
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "$ref":"#/definitions/ResponseMessage«Device»"
            }
          },
          "400":{
            "description":"Bad request"
          },
          "404":{
            "description":"Not found"
          },
          "409":{
            "description":"Conflict"
          },
          "412":{
            "description":"Precondition Failed"
          },
          "500":{
            "description":"Internal Server Error"
          }
        },
        "security":[
          {
            "oauth2":[
              "totp"
            ]
          }
        ],
        "deprecated":false
      },
      "delete":{
        "tags":[
          "device-user-connection-controller"
        ],
        "summary":"disconnectDeviceAndUser",
        "operationId":"disconnectDeviceAndUserUsingDELETE",
        "produces":[
          "application/json;charset=UTF-8"
        ],
        "parameters":[
          {
            "name":"deviceId",
            "in":"path",
            "description":"deviceId",
            "required":true,
            "type":"string"
          },
          {
            "name":"userId",
            "in":"path",
            "description":"userId",
            "required":true,
            "type":"string"
          },
          {
            "name":"Authorization",
            "in":"header",
            "description":"Authorization token",
            "required":false,
            "type":"string"
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "$ref":"#/definitions/ResponseMessage«Device»"
            }
          },
          "400":{
            "description":"Bad request"
          },
          "404":{
            "description":"Not found"
          },
          "409":{
            "description":"Conflict"
          },
          "412":{
            "description":"Precondition Failed"
          },
          "500":{
            "description":"Internal Server Error"
          }
        },
        "security":[
          {
            "oauth2":[
              "totp"
            ]
          }
        ],
        "deprecated":false
      }
    },
    "/devices/{deviceId}/{fieldName}/{fieldValue}":{
      "put":{
        "tags":[
          "passthru-device-controller"
        ],
        "summary":"updateDeviceProperty",
        "operationId":"updateDevicePropertyUsingPUT",
        "consumes":[
          "application/json;charset=UTF-8"
        ],
        "produces":[
          "application/json;charset=UTF-8"
        ],
        "parameters":[
          {
            "name":"deviceId",
            "in":"path",
            "description":"deviceId",
            "required":true,
            "type":"string"
          },
          {
            "name":"fieldName",
            "in":"path",
            "description":"fieldName",
            "required":true,
            "type":"string"
          },
          {
            "name":"fieldValue",
            "in":"path",
            "description":"fieldValue",
            "required":true,
            "type":"string"
          },
          {
            "name":"Authorization",
            "in":"header",
            "description":"Authorization token",
            "required":false,
            "type":"string"
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "$ref":"#/definitions/ResponseMessage«Device»"
            }
          },
          "400":{
            "description":"Bad request"
          },
          "404":{
            "description":"Not found"
          },
          "500":{
            "description":"Internal Server Error"
          }
        },
        "security":[
          {
            "oauth2":[
              "totp"
            ]
          }
        ],
        "deprecated":false
      }
    },
    "/imports":{
      "get":{
        "tags":[
          "passthru-import-jobs-controller"
        ],
        "summary":"getImportjobs",
        "operationId":"getImportjobsUsingGET",
        "produces":[
          "application/json;charset=UTF-8"
        ],
        "parameters":[
          {
            "name":"Authorization",
            "in":"header",
            "description":"Authorization token",
            "required":false,
            "type":"string"
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "$ref":"#/definitions/ResponseMessage«ImportJobs»"
            }
          },
          "400":{
            "description":"Bad Request"
          },
          "404":{
            "description":"Not Found"
          },
          "500":{
            "description":"Internal Server Error"
          }
        },
        "security":[
          {
            "oauth2":[
              "totp"
            ]
          }
        ],
        "deprecated":false
      },
      "post":{
        "tags":[
          "passthru-file-import-controller"
        ],
        "summary":"importXml",
        "operationId":"importXmlUsingPOST",
        "consumes":[
          "application/json;charset=UTF-8"
        ],
        "produces":[
          "application/json;charset=UTF-8"
        ],
        "parameters":[
          {
            "in":"body",
            "name":"requestData",
            "description":"requestData",
            "required":true,
            "schema":{
              "$ref":"#/definitions/FileImportRequestData"
            }
          },
          {
            "name":"Authorization",
            "in":"header",
            "description":"Authorization token",
            "required":false,
            "type":"string"
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "$ref":"#/definitions/ResponseMessage«ImportJob»"
            }
          },
          "400":{
            "description":"Bad Request"
          },
          "404":{
            "description":"Not Found"
          },
          "500":{
            "description":"Internal Server Error"
          }
        },
        "security":[
          {
            "oauth2":[
              "totp"
            ]
          }
        ],
        "deprecated":false
      }
    },
    "/imports/{id}":{
      "get":{
        "tags":[
          "passthru-import-jobs-controller"
        ],
        "summary":"getSpecificImportJob",
        "operationId":"getSpecificImportJobUsingGET",
        "produces":[
          "application/json;charset=UTF-8"
        ],
        "parameters":[
          {
            "name":"id",
            "in":"path",
            "description":"id",
            "required":true,
            "type":"string"
          },
          {
            "name":"Authorization",
            "in":"header",
            "description":"Authorization token",
            "required":false,
            "type":"string"
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "$ref":"#/definitions/ResponseMessage«ImportJob»"
            }
          },
          "400":{
            "description":"Bad Request"
          },
          "404":{
            "description":"Not Found"
          },
          "500":{
            "description":"Internal Server Error"
          }
        },
        "security":[
          {
            "oauth2":[
              "totp"
            ]
          }
        ],
        "deprecated":false
      }
    },
    "/imports/{importJobId}/file":{
      "get":{
        "tags":[
          "passthru-import-jobs-controller"
        ],
        "summary":"downloadFile",
        "operationId":"downloadFileUsingGET",
        "produces":[
          "application/json;charset=UTF-8"
        ],
        "parameters":[
          {
            "name":"importJobId",
            "in":"path",
            "description":"importJobId",
            "required":true,
            "type":"string"
          },
          {
            "name":"Authorization",
            "in":"header",
            "description":"Authorization token",
            "required":false,
            "type":"string"
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "$ref":"#/definitions/ResponseMessage«ImportJobFile»"
            }
          },
          "400":{
            "description":"Bad Request"
          },
          "404":{
            "description":"Not Found"
          },
          "500":{
            "description":"Internal Server Error"
          }
        },
        "security":[
          {
            "oauth2":[
              "totp"
            ]
          }
        ],
        "deprecated":false
      }
    },
    "/keys/{deviceId}":{
      "get":{
        "tags":[
          "key-controller"
        ],
        "summary":"getKey",
        "operationId":"getKeyUsingGET",
        "produces":[
          "application/json;charset=UTF-8"
        ],
        "parameters":[
          {
            "name":"deviceId",
            "in":"path",
            "description":"deviceId",
            "required":true,
            "type":"string"
          },
          {
            "name":"Authorization",
            "in":"header",
            "description":"Authorization token",
            "required":false,
            "type":"string"
          }
        ],
        "responses":{
          "200":{
            "description":"OK",
            "schema":{
              "$ref":"#/definitions/Key"
            }
          },
          "400":{
            "description":"Invalid Device Id"
          },
          "404":{
            "description":"Device Not Found"
          },
          "412":{
            "description":"Device State Not Active"
          },
          "500":{
            "description":"Internal Server Error"
          }
        },
        "security":[
          {
            "oauth2":[
              "totp"
            ]
          }
        ],
        "deprecated":false
      }
    }
  },
  "securityDefinitions":{
    "oauth2":{
      "type":"oauth2",
      "tokenUrl":"https://qa-login.bisnode.com/as/token.oauth2",
      "flow":"application",
      "scopes":{
        "totp":""
      }
    }
  },
  "definitions":{
    "Customer":{
      "type":"object",
      "properties":{
        "contractId":{
          "type":"string"
        },
        "contractIdType":{
          "type":"string"
        },
        "createdAt":{
          "type":"string",
          "format":"date-time"
        },
        "createdBy":{
          "type":"string"
        },
        "customerId":{
          "type":"string",
          "format":"uuid"
        },
        "devices":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/Device"
          }
        },
        "display":{
          "type":"string"
        },
        "updatedAt":{
          "type":"string",
          "format":"date-time"
        },
        "updatedBy":{
          "type":"string"
        }
      },
      "title":"Customer"
    },
    "CustomerCreate":{
      "type":"object",
      "properties":{
        "contractId":{
          "type":"string"
        },
        "contractIdType":{
          "type":"string"
        },
        "createdBy":{
          "type":"string"
        },
        "customerId":{
          "type":"string"
        },
        "display":{
          "type":"string"
        }
      },
      "title":"CustomerCreate"
    },
    "CustomerUpdate":{
      "type":"object",
      "required":[
        "contractId",
        "contractIdType",
        "updatedBy"
      ],
      "properties":{
        "contractId":{
          "type":"string"
        },
        "contractIdType":{
          "type":"string"
        },
        "display":{
          "type":"string"
        },
        "updatedBy":{
          "type":"string"
        }
      },
      "title":"CustomerUpdate"
    },
    "Device":{
      "type":"object",
      "properties":{
        "createdAt":{
          "type":"string",
          "format":"date-time",
          "description":"When device was created in database"
        },
        "customer":{
          "$ref":"#/definitions/Customer"
        },
        "customerContractId":{
          "type":"string"
        },
        "customerContractIdType":{
          "type":"string"
        },
        "deviceId":{
          "type":"string",
          "format":"uuid",
          "description":"Public unique identifier of this device"
        },
        "deviceInfo":{
          "description":"Device info as received in the import XML",
          "$ref":"#/definitions/DeviceInfo"
        },
        "encryptionMethod":{
          "type":"string",
          "enum":[
            "NONE",
            "AES"
          ]
        },
        "secret":{
          "description":"The device's individual secret",
          "$ref":"#/definitions/Secret"
        },
        "state":{
          "type":"string",
          "enum":[
            "VACANT",
            "ACTIVE",
            "DISABLED",
            "LOST",
            "DISCONTINUED"
          ]
        },
        "time":{
          "type":"integer",
          "format":"int64"
        },
        "timeInterval":{
          "type":"integer",
          "format":"int64"
        },
        "updatedAt":{
          "type":"string",
          "format":"date-time",
          "description":"When device was updated in database"
        },
        "user":{
          "$ref":"#/definitions/User"
        }
      },
      "title":"Device"
    },
    "DeviceInfo":{
      "type":"object",
      "properties":{
        "manufacturer":{
          "type":"string",
          "description":"The device's manufacturer name or identifier"
        },
        "model":{
          "type":"string",
          "description":"The device's model name or identifier"
        },
        "serialNumber":{
          "type":"string",
          "description":"The device's serial number"
        }
      },
      "title":"DeviceInfo"
    },
    "DeviceStateInfo":{
      "type":"object",
      "properties":{
        "currentState":{
          "type":"string",
          "description":"The device state in question",
          "enum":[
            "VACANT",
            "ACTIVE",
            "DISABLED",
            "LOST",
            "DISCONTINUED"
          ]
        },
        "linkedToContract":{
          "type":"boolean"
        },
        "linkedToUser":{
          "type":"boolean"
        },
        "transitions":{
          "type":"array",
          "description":"The states this state can transition to",
          "items":{
            "$ref":"#/definitions/DeviceStateTransition"
          }
        }
      },
      "title":"DeviceStateInfo",
      "description":"Information about a state"
    },
    "DeviceStateTransition":{
      "type":"object",
      "properties":{
        "targetState":{
          "type":"string",
          "description":"The device state in question",
          "enum":[
            "VACANT",
            "ACTIVE",
            "DISABLED",
            "LOST",
            "DISCONTINUED"
          ]
        },
        "userConnectionRule":{
          "type":"string",
          "description":"Whether it is considered ok to disconnect the user of this device when transitioning to the target state.",
          "enum":[
            "OPTIONALLY_DISCONNECT",
            "MUST_DISCONNECT",
            "MUST_NOT_DISCONNECT"
          ]
        }
      },
      "title":"DeviceStateTransition",
      "description":"Information about a state"
    },
    "DeviceUpdate":{
      "type":"object",
      "properties":{
        "customerContractId":{
          "type":"string"
        },
        "customerContractIdType":{
          "type":"string"
        },
        "state":{
          "type":"string",
          "enum":[
            "VACANT",
            "ACTIVE",
            "DISABLED",
            "LOST",
            "DISCONTINUED"
          ]
        },
        "timeInterval":{
          "type":"integer",
          "format":"int64"
        }
      },
      "title":"DeviceUpdate"
    },
    "DevicesResponse":{
      "type":"object",
      "properties":{
        "devices":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/Device"
          }
        }
      },
      "title":"DevicesResponse"
    },
    "ErrorResponse":{
      "type":"object",
      "properties":{
        "cause":{
          "type":"object"
        },
        "code":{
          "type":"string"
        },
        "field":{
          "type":"string"
        },
        "message":{
          "type":"string"
        },
        "origin":{
          "type":"string"
        }
      },
      "title":"ErrorResponse"
    },
    "FileImportRequestData":{
      "type":"object",
      "required":[
        "filename",
        "importedBy",
        "transportKey",
        "xml"
      ],
      "properties":{
        "filename":{
          "type":"string"
        },
        "importedBy":{
          "type":"string"
        },
        "transportKey":{
          "type":"string"
        },
        "xml":{
          "type":"string"
        }
      },
      "title":"FileImportRequestData"
    },
    "GetCustomersResponseData":{
      "type":"object",
      "properties":{
        "customers":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/Customer"
          }
        },
        "page":{
          "type":"integer",
          "format":"int32"
        },
        "returned":{
          "type":"integer",
          "format":"int32"
        },
        "size":{
          "type":"integer",
          "format":"int32"
        },
        "total":{
          "type":"integer",
          "format":"int64"
        }
      },
      "title":"GetCustomersResponseData"
    },
    "GetDevicesResponseData":{
      "type":"object",
      "properties":{
        "devices":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/Device"
          }
        },
        "page":{
          "type":"integer",
          "format":"int32"
        },
        "returned":{
          "type":"integer",
          "format":"int32"
        },
        "size":{
          "type":"integer",
          "format":"int32"
        },
        "total":{
          "type":"integer",
          "format":"int64"
        }
      },
      "title":"GetDevicesResponseData"
    },
    "ImportJob":{
      "type":"object",
      "properties":{
        "batchId":{
          "type":"string",
          "format":"uuid",
          "description":"Public and globally unique identifier of this import"
        },
        "createdAt":{
          "type":"string",
          "format":"date-time",
          "description":"When the job was created"
        },
        "deviceCount":{
          "type":"integer",
          "format":"int32",
          "description":"The number of devices imported in this job"
        },
        "filename":{
          "type":"string",
          "description":"The name of the file which was uploaded"
        },
        "importedBy":{
          "type":"string",
          "description":"Who imported the job"
        },
        "importedDevices":{
          "type":"array",
          "description":"The set of devices imported",
          "items":{
            "$ref":"#/definitions/ImportedDevice"
          }
        },
        "outcome":{
          "type":"string",
          "description":"Outcome of the job",
          "enum":[
            "NOT_DONE",
            "SUCCESS",
            "FAILED"
          ]
        },
        "state":{
          "type":"string",
          "description":"Current state of the job",
          "enum":[
            "CREATED",
            "IMPORTING",
            "COMPLETED"
          ]
        }
      },
      "title":"ImportJob",
      "description":"An import job, with its meta data and comprising devices"
    },
    "ImportJobFile":{
      "type":"object",
      "properties":{
        "fileContent":{
          "type":"string",
          "description":"File content of the importjob's file"
        },
        "filename":{
          "type":"string",
          "description":"Filename of the stored file"
        },
        "importJobId":{
          "type":"string",
          "format":"uuid",
          "description":"Public and globally unique identifier of the import job in question"
        }
      },
      "title":"ImportJobFile",
      "description":"An import job, with its meta data and comprising devices"
    },
    "ImportJobs":{
      "type":"object",
      "properties":{
        "importJobs":{
          "type":"array",
          "description":"The set of import jobs",
          "items":{
            "$ref":"#/definitions/ImportJob"
          }
        }
      },
      "title":"ImportJobs",
      "description":"An object with a set of import jobs"
    },
    "ImportedDevice":{
      "type":"object",
      "properties":{
        "createdAt":{
          "type":"string",
          "format":"date-time"
        },
        "deviceId":{
          "type":"string",
          "format":"uuid"
        },
        "deviceInfo":{
          "description":"Device info: manufacturer, serial number and model",
          "$ref":"#/definitions/DeviceInfo"
        },
        "encryptionMethod":{
          "type":"string",
          "enum":[
            "NONE",
            "AES"
          ]
        },
        "reason":{
          "type":"string"
        },
        "secret":{
          "$ref":"#/definitions/Secret"
        },
        "state":{
          "type":"string",
          "enum":[
            "CREATED",
            "IMPORTED",
            "UPDATED",
            "FAILED"
          ]
        },
        "time":{
          "type":"integer",
          "format":"int64"
        },
        "timeInterval":{
          "type":"integer",
          "format":"int64"
        },
        "updatedAt":{
          "type":"string",
          "format":"date-time"
        }
      },
      "title":"ImportedDevice",
      "description":"A representation of a device, as it was in the data import file"
    },
    "Key":{
      "type":"object",
      "properties":{
        "key":{
          "type":"string"
        },
        "vendor":{
          "type":"string"
        }
      },
      "title":"Key"
    },
    "ResponseEntity":{
      "type":"object",
      "properties":{
        "body":{
          "type":"object"
        },
        "statusCode":{
          "type":"string",
          "enum":[
            "100",
            "101",
            "102",
            "103",
            "200",
            "201",
            "202",
            "203",
            "204",
            "205",
            "206",
            "207",
            "208",
            "226",
            "300",
            "301",
            "302",
            "303",
            "304",
            "305",
            "307",
            "308",
            "400",
            "401",
            "402",
            "403",
            "404",
            "405",
            "406",
            "407",
            "408",
            "409",
            "410",
            "411",
            "412",
            "413",
            "414",
            "415",
            "416",
            "417",
            "418",
            "419",
            "420",
            "421",
            "422",
            "423",
            "424",
            "426",
            "428",
            "429",
            "431",
            "451",
            "500",
            "501",
            "502",
            "503",
            "504",
            "505",
            "506",
            "507",
            "508",
            "509",
            "510",
            "511"
          ]
        },
        "statusCodeValue":{
          "type":"integer",
          "format":"int32"
        }
      },
      "title":"ResponseEntity"
    },
    "ResponseMessage«Customer»":{
      "type":"object",
      "properties":{
        "data":{
          "$ref":"#/definitions/Customer"
        },
        "errors":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/ErrorResponse"
          }
        }
      },
      "title":"ResponseMessage«Customer»"
    },
    "ResponseMessage«DeviceStateInfo»":{
      "type":"object",
      "properties":{
        "data":{
          "$ref":"#/definitions/DeviceStateInfo"
        },
        "errors":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/ErrorResponse"
          }
        }
      },
      "title":"ResponseMessage«DeviceStateInfo»"
    },
    "ResponseMessage«DevicesResponse»":{
      "type":"object",
      "properties":{
        "data":{
          "$ref":"#/definitions/DevicesResponse"
        },
        "errors":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/ErrorResponse"
          }
        }
      },
      "title":"ResponseMessage«DevicesResponse»"
    },
    "ResponseMessage«Device»":{
      "type":"object",
      "properties":{
        "data":{
          "$ref":"#/definitions/Device"
        },
        "errors":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/ErrorResponse"
          }
        }
      },
      "title":"ResponseMessage«Device»"
    },
    "ResponseMessage«GetCustomersResponseData»":{
      "type":"object",
      "properties":{
        "data":{
          "$ref":"#/definitions/GetCustomersResponseData"
        },
        "errors":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/ErrorResponse"
          }
        }
      },
      "title":"ResponseMessage«GetCustomersResponseData»"
    },
    "ResponseMessage«GetDevicesResponseData»":{
      "type":"object",
      "properties":{
        "data":{
          "$ref":"#/definitions/GetDevicesResponseData"
        },
        "errors":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/ErrorResponse"
          }
        }
      },
      "title":"ResponseMessage«GetDevicesResponseData»"
    },
    "ResponseMessage«ImportJobFile»":{
      "type":"object",
      "properties":{
        "data":{
          "$ref":"#/definitions/ImportJobFile"
        },
        "errors":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/ErrorResponse"
          }
        }
      },
      "title":"ResponseMessage«ImportJobFile»"
    },
    "ResponseMessage«ImportJobs»":{
      "type":"object",
      "properties":{
        "data":{
          "$ref":"#/definitions/ImportJobs"
        },
        "errors":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/ErrorResponse"
          }
        }
      },
      "title":"ResponseMessage«ImportJobs»"
    },
    "ResponseMessage«ImportJob»":{
      "type":"object",
      "properties":{
        "data":{
          "$ref":"#/definitions/ImportJob"
        },
        "errors":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/ErrorResponse"
          }
        }
      },
      "title":"ResponseMessage«ImportJob»"
    },
    "Secret":{
      "type":"object",
      "properties":{
        "decrypted":{
          "type":"string",
          "description":"The decrypted secret of the device, may be null when client is not allowed to see it"
        },
        "encrypted":{
          "type":"string",
          "description":"The encrypted secret of the device, may be null when client is not allowed to see it"
        }
      },
      "title":"Secret"
    },
    "User":{
      "type":"object",
      "properties":{
        "createdAt":{
          "type":"string",
          "format":"date-time"
        },
        "devices":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/Device"
          }
        },
        "display":{
          "type":"string"
        },
        "updatedAt":{
          "type":"string",
          "format":"date-time"
        },
        "userId":{
          "type":"string",
          "format":"uuid"
        }
      },
      "title":"User"
    }
  }
}